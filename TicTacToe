package Gruppe5;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;

public class Settings {

	/**
	 * @param args
	 * @throws IOException 
	 * @throws FileNotFoundException 
	 */

	static String Gamename = "Tic Tac Toe";
	static int GameID = 0;
	static int LoadedWins = 0;
	static int NewWins = 2;
	static int LoadedLoses = 0;
	static int NewLoses = 0;
	static boolean file;

	static float average_win_lose;
	
	static String SaveGameID = String.valueOf(GameID);
	static String SaveWins = String.valueOf(LoadedWins+NewWins);
	static String SaveLoses = String.valueOf(LoadedLoses+NewLoses);

	public static void ControllFile() throws FileNotFoundException, IOException{
		// Wird überprüft, ob datei existiert
		File Setting = new File("Settings.config");
		if(!Setting.exists()){
			file = true;
			Save();
		} else{
			file = false;

		}
	}

	public static void Save() throws FileNotFoundException, IOException{

		// New Settings
		Properties props = new Properties();

		// Values are set
		props.setProperty("Gamename", Gamename);
		props.setProperty("GameID", SaveGameID);
		props.setProperty("wins", SaveWins);
		props.setProperty("loses", SaveLoses);

		// Setting is going to be saved
		props.store(new FileOutputStream(new File("Config")), "Gamesettings");
	}

	public static void Load() throws FileNotFoundException, IOException{

		Properties props = new Properties();

		// Load from "Config"
		props.load(new FileInputStream("Config"));

		// Load saved Settings
		Gamename = props.getProperty("Gamename");
		GameID = Integer.parseInt(props.getProperty("GameID"));
		LoadedWins = Integer.parseInt(props.getProperty("wins"));
		LoadedLoses = Integer.parseInt(props.getProperty("loses"));
	}

	public static float Average(){
		try {
			average_win_lose = ((LoadedWins+NewWins) / (LoadedWins+NewWins+LoadedLoses+NewLoses)) * 100;
			}
		catch (Exception e) {
			System.out.println("Error at calculating Average Win/Lose");
		}
		return average_win_lose;
	}
}
